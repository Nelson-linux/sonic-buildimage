#!/bin/bash

### BEGIN INIT INFO
# Provides:          setup-board
# Required-Start:    $portmap
# Required-Stop:
# Should-Start:
# Should-Stop:
# Default-Start:     S
# Default-Stop:      0 6
# Short-Description: Setup Blackstone board.
### END INIT INFO


case "$1" in
start)
        echo -n "Setting up board... "
        depmod -a

        modprobe i2c-dev
        modprobe ipmi_devintf
        modprobe cls-i2c-mux-pca954x
        modprobe mc24lc64t

        modprobe baseboard-lpc
        modprobe come-lpc
        modprobe cls-fpga
        modprobe xcvr-cls
        modprobe misc_cpld

        # Instantiate TLV EEPROM device on I801 bus
        devname=`cat /sys/bus/i2c/devices/i2c-0/name`
        if [[ $devname == 'SMBus I801 adapter at '* ]]; then
                echo 24lc64t 0x56 > /sys/bus/i2c/devices/i2c-0/new_device
        fi

        # Clear syseeprom cache
        decode-syseeprom --init 2> /dev/null &

        # Attach switchboard CPLD i2c device
        echo misc_cpld1 0x30 > /sys/bus/i2c/devices/i2c-10/new_device
        echo misc_cpld2 0x31 > /sys/bus/i2c/devices/i2c-11/new_device

        # To control the mux channel idle behavior.
        echo -2 > /sys/bus/i2c/drivers/cls_pca954x/6-0070/idle_state
        echo -2 > /sys/bus/i2c/drivers/cls_pca954x/6-0071/idle_state
        echo -2 > /sys/bus/i2c/drivers/cls_pca954x/12-0072/idle_state
        echo -2 > /sys/bus/i2c/drivers/cls_pca954x/12-0073/idle_state

        # Attach Optical Module EEPROM
        # use optoe2 for SFP+.
        for i in {13..14}
        do
                echo optoe2 0x50 > /sys/bus/i2c/devices/i2c-$i/new_device
        done

        # use optoe3 for QSFP-DD.
        for i in {15..46}
        do
                echo optoe3 0x50 > /sys/bus/i2c/devices/i2c-$i/new_device
        done

        /bin/sh /usr/local/bin/platform_api_mgnt.sh init

        echo "done."
        ;;

stop)
        echo "done."
        ;;

force-reload|restart)
        echo "Not supported"
        ;;

*)
Usage: /etc/init.d/platform-modules-blackstone.init {start|stop}
        exit 1
        ;;
esac

exit 0
